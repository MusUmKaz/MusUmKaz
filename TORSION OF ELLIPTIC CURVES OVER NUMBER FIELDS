In the following batch of codes for each X_1(m,mn) case first code used to find points of X_1(m,mn) over a number field. In the case that we have new points over number field, which we do not have over Q, we used to second code to test that do new points generate an elliptic curve with torsion (m,mn).


X_1(11)
R<x>:=PolynomialRing(Rationals());
f:=;
K<a>:= NumberField(f);
E := EllipticCurve([K |0, -1, -1, 0, 0]);
TorsionSubgroup(E);
Rank(E);
G, h := TorsionSubgroup(E);
torsion_pts_E := [ h(g) : g in G ];
torsion_pts_E;


K<x>:=PolynomialRing(Rationals());
F<a>:=NumberField();
t:=;
s:=;
E:=EllipticCurve([F|(s*t + t - s^2),s*(s - 1)*(s - t)*t, t^2*s*(s - 1)*(s - t),0,0]);
E;
TorsionSubgroup(E);












X_1(14)
R<x>:=PolynomialRing(Rationals());
f:=;
K<a>:= NumberField(f);
E := EllipticCurve([K |1, 0, 1, -1, 0]);
TorsionSubgroup(E);
Rank(E);
G, h := TorsionSubgroup(E);
torsion_pts_E := [ h(g) : g in G ];
torsion_pts_E;

K<x>:=PolynomialRing(Rationals());
F<a>:=NumberField();
x:= ;
y:=;
X:=x;
Y:=y+1;
z:=1;
U:=-X^2 - X*Y + X*z;
V:=X*z + Y*z - z^2;
W:=X^2;
u:=U/W;
v:=V/W;
r:= 1-(u+v)/((v+1)*(u+v+1));
s:=(1-u)/(v+1);
E:=EllipticCurve([F|s-r*s+1,r*s-r^2*s,r*s-r^2*s,0,0]);
E;
TorsionSubgroup(E);



X_1(15)
R<x>:=PolynomialRing(Rationals());
f:=;
K<a>:= NumberField(f);
E := EllipticCurve([K |1, 1, 1, 0, 0]);
TorsionSubgroup(E);
Rank(E);
G, h := TorsionSubgroup(E);
torsion_pts_E := [ h(g) : g in G ];
torsion_pts_E;

K<x>:=PolynomialRing(Rationals());
F<a>:=NumberField();
t:=;
s:=;
E:=EllipticCurve([F|((t^2-t)*s+(t^5+5*t^4+9*t^3+7*t^2+4*t+1))/((t^2+t+1)*(t+1)^3) ,(t*(t^4-2*t^2-t-1)*s+(t+1)*(t^3+3*t^2+t+1)*t^3)/((t^2+t+1)*(t+1)^6),(t*(t^4-2*t^2-t-1)*s+(t+1)*(t^3+3*t^2+t+1)*t^3)/((t^2+t+1)*(t+1)^6),0,0]);
E;
TorsionSubgroup(E);












X_1(2,10)
R<x>:=PolynomialRing(Rationals());
f:=;
K<a>:= NumberField(f);
E := EllipticCurve([K |0, 1, 0, -1, 0]);
TorsionSubgroup(E);
Rank(E);
G, h := TorsionSubgroup(E);
torsion_pts_E := [ h(g) : g in G ];
torsion_pts_E;

K<x>:=PolynomialRing(Rationals());
F<a>:=NumberField();
u:=;
v:=;
q := u/v;
t := 4*u*v/(u*v^2-u^3-3*u^2-v^2);
E:=EllipticCurve([F|0,t^2-2*q*t-2,0,-(t^2-1)*(q*t+1)^2,0]);
E;
TorsionSubgroup(E);











X_1(2,12)

R<x>:=PolynomialRing(Rationals());
f:=;
K<a>:= NumberField(f);
E := EllipticCurve([K |0, -1, 0, 1, 0]);
TorsionSubgroup(E);
Rank(E);
G, h := TorsionSubgroup(E);
torsion_pts_E := [ h(g) : g in G ];
torsion_pts_E;


K<x>:=PolynomialRing(Rationals());
F<a>:=NumberField();
u:=;
v:=;
q := v;
t := 4*v/(u*v^2-u-3*v^2-1);
E:=EllipticCurve([F|0,t^2-2*q*t-2,0,-(t^2-1)*(q*t+1)^2,0]);
E;
TorsionSubgroup(E);








X_1(3,9)
R<x>:=PolynomialRing(Rationals());
f:=;
K<a>:= NumberField(f);
E := EllipticCurve([K |0, 0, 1, 0, 0]);
TorsionSubgroup(E);
Rank(E);
G, h := TorsionSubgroup(E);
torsion_pts_E := [ h(g) : g in G ];
torsion_pts_E;

K<x>:=PolynomialRing(Rationals());
F<a>:=NumberField();
k:=;
l:=;
x:=9*k + 9 ;
y:= 27*l + 54 ;
z:=1;
U:=1/9*x^3*y^3 - 45/2*x^3*y^2*z - 8/3*x^2*y^3*z - 1/9*y^5*z + 648*x^3*y*z^2 + 567*x^2*y^2*z^2 + 27*x*y^3*z^2 + 63/2*y^4*z^2 - 13851*x^2*y*z^3 - 11421/2*x*y^2*z^3 -5427/2*y^3*z^3 - 118098*x^2*z^4 + 373977/2*x*y*z^4 + 91854*y^2*z^4 - 531441/2*x*z^5 - 1062882*y*z^5;
V:=-162*x^2*y^2*z^2 - 27*x*y^3*z^2 - 4*y^4*z^2 +13122*x^2*y*z^3 + 9477/2*x*y^2*z^3 + 324*y^3*z^3 -236196*x^2*z^4 - 216513*x*y*z^4 - 10935*y^2*z^4 +2657205*x*z^5 + 14348907/2*z^6;
W:=y^4*z^2 - 405/2*y^3*z^3 - 59049/2*x*y*z^4 + 45927/2*y^2*z^4 +1062882*x*z^5 - 708588*y*z^5 + 4782969/2*z^6;
u:=U/W;
v:=V/W;
t := (u+1)/(u+2);
E:=EllipticCurve([F|-(t^3-t^2-1),-t^2*(t-1)*(t^2-t+1),-t^2*(t-1)*(t^2-t+1),0,0]);
E;
TorsionSubgroup(E);
X_1(4,8)
R<x>:=PolynomialRing(Rationals());
f:=;
K<a>:= NumberField(f);
E := EllipticCurve([K |0, 0, 0, -1, 0]);
TorsionSubgroup(E);
Rank(E);
G, h := TorsionSubgroup(E);
torsion_pts_E := [ h(g) : g in G ];
torsion_pts_E;

K<x>:=PolynomialRing(Rationals());
F<a>:=NumberField();
u:=;
v:=;
x := (u-v-1)*(u-v+1)*(u+v-1)^2*(u^3+u^2-u*v^2-u-3*v^2-1)/(64*v^3*(u^2-u-v^2));
t := -x*(u-v-1)*(u+v+1)/(4*v);
E:=EllipticCurve([F|1,-t,-t,0,0]);
E;
TorsionSubgroup(E);











X_1(6,6)

R<x>:=PolynomialRing(Rationals());
f:=;
K<a>:= NumberField(f);
E := EllipticCurve([K |0, 0, 0, 0, 1]);
TorsionSubgroup(E);
Rank(E);
G, h := TorsionSubgroup(E);
torsion_pts_E := [ h(g) : g in G ];
torsion_pts_E;

K<x>:=PolynomialRing(Rationals());
F<a>:=NumberField();
u:=;
v:=;
a := u^2+2*u-v+1;
b := u^3+2*u^2+u*v+u-v^2+v;
c := u^3+3*u^2+3*u-v^2+1;
t := a^2*b/(u*c^2);
x := -v*(u+1)*a*b*(b-(u+1)^2+v)/(u*c^3);
E:=EllipticCurve([F|2-t,t-t^2,t-t^2,0,0]);
E;
TorsionSubgroup(E);

The following code used to make connection of the codes related to X_1(m,mn) in the website of Prof. Andrew Sutherland and their nice models.


Map between X_1(14)(in the website of Prof. Andrew Sutherland) and 14a5
 
K<a>:= NumberField(f);
R<u,v> := PolynomialRing(Rationals(),2);
X:=v^2 + (u^2 + u)*v + u;
Rxyz<x,y,z>:=PolynomialRing(Rationals(),3);
P2 := ProjectiveSpace(Rxyz);
C := Curve(P2,z*y^2 + (x^2 + z*x)*y + x*z^2);
E,phi := EllipticCurve(C,Places(C![1,0,0])[1]);
E;
phi;
IsInvertible(phi);
E1 := EllipticCurve([1, 0, 1, -1, 0]);
b,iota :=IsIsomorphic(E,E1);
b;
iota;
IsInvertible(iota);

Map between X_1(3,9)(in the website of Prof. Andrew Sutherland) and 27a3

R<u,v> := PolynomialRing(Rationals(),2);
X := 3*v^3 + (3*u^3 + 9*u^2)*v^2 + (u^6 + 6*u^5 + 9*u^4)*v + 4*u^6 +33*u^5 + 108*u^4 + 186*u^3 + 189*u^2 + 108*u + 27;
Rxyz<x,y,z>:=PolynomialRing(Rationals(),3);
P2 := ProjectiveSpace(Rxyz);
C := Curve(P2,Numerator(z^7*Evaluate(X,[x/z,y/z])));
E,phi := EllipticCurve(C,Places(C![1,0,0])[1]);
E;
IsInvertible(phi);
E1 := EllipticCurve([0, 0, 1, 0, 0]);
b,iota :=IsIsomorphic(E,E1);
b;
iota;
IsInvertible(iota);
